"""
Django settings for user_profile project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# --- VERCEL DEPLOYMENT SETTINGS ---
# Environment variables are essential for security and proper deployment.

# SECURITY WARNING: Use Vercel's Environment Variables for the SECRET_KEY.
# The value below is only a fallback for local development.
SECRET_KEY = os.environ.get(
    'SECRET_KEY',
    'kyfgm@#2h6pw#fqzmsye&b*7s(_j=%9h!0y4f#f#dk14x0k^kw'
)

# SECURITY WARNING: Never run with debug turned on in production!
# Vercel sets NODE_ENV to 'production' automatically. We use this to set DEBUG.
DEBUG = os.environ.get('NODE_ENV') != 'production'

# Get the Vercel URL from environment variables
VERCEL_URL = os.environ.get('VERCEL_URL')

# (This is the new, corrected block)
VERCEL_URL = os.environ.get('VERCEL_URL')
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
if VERCEL_URL:
    # ALLOWED_HOSTS should not have the scheme
    ALLOWED_HOSTS.append(VERCEL_URL)

# CSRF_TRUSTED_ORIGINS requires the full URL with the 'https://' scheme
CSRF_TRUSTED_ORIGINS = ['https://127.0.0.1', 'https://localhost']
if VERCEL_URL:
    CSRF_TRUSTED_ORIGINS.append(f'https://{VERCEL_URL}')


# --- APPLICATION DEFINITION ---

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'web',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # For serving static files
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'user_profile.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], # If you have a project-level 'templates' folder, add it here: [BASE_DIR / 'templates']
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'user_profile.wsgi.application'


# --- DATABASE CONFIGURATION ---
# Connects to Vercel Postgres when deployed, otherwise uses local SQLite.
DATABASES = {
    'default': dj_database_url.config(
        default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}",
        conn_max_age=600
    )
}


# --- PASSWORD VALIDATION ---
AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]


# --- INTERNATIONALIZATION ---
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# --- STATIC FILES (CSS, JavaScript, Images) ---
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# ADDED: This tells Django where to find your project-level static files
# (like a main style.css or your profile image if not in an app).
# Create a folder named 'static' in your project's root directory.
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# This is the single folder where 'collectstatic' will copy all static files
# for Vercel to serve.
STATIC_ROOT = BASE_DIR / "staticfiles"

# Use WhiteNoise to serve files efficiently in production.
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}


# --- DEFAULT PRIMARY KEY FIELD TYPE ---
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- EMAIL SETTINGS ---
# SECURITY WARNING: It is highly recommended to move these credentials to
# Vercel's Environment Variables to avoid exposing them in your code.
# For example: EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'muhammadshaheryar1920@gmail.com'
EMAIL_HOST_PASSWORD = 'wxag zqkj ffso mpwb'